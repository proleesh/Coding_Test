1. 스레드를 실행할려면 start() 메소드를 호출해야 한다.
2. 1은 가장 낮은 우선순위이기 때문에 다른 스레드보다 실행 기회를 더 많이 갖는다.
3. 스레드가 동기화 메소드를 실행할 때 다른 스레드는 일반 스레드를 호출할 수 있다 그런데 다른 동기화 스레드는 호출할 수 없다.
4. 동기화 메소드 내에서 wait()를 호출하면 일시 정지 상태가 된다. 시간이 지나면 자동으로 실행 대기 상태가 된다. 아니면 notify() 또는 notifyAll()를 쓰면 대기 상태가 된다.
5. getState() 메서드를 호출하면 열거 함수TIMED_WAITING를 리턴한다 즉 주어진 시간 동안 기다리는 상태가 된다.
6.getState() 메서드의 열거 함수들은 다음과 같이 있다.
(1). state: 객체 생성 | 열거 상수: NEW           | 설명: 스레드 객체가 생성, 아직 start() 메서드가 호출되지 않은 상태
(2). state: 실행 대기 | 열거 상수: RUNNABLE      | 설명: 실행 상태로 언제든지 갈 수 있는 상태
(3). state: 일시 정지 | 열거 상수: WAITING       | 설명: 다른 스레드가 통지할 때까지 기다리는 상태
(4). state: 일시 정지 | 열거 상수: TIMED_WAITING | 설명: 주어진 시간 동안 기다리는 상태
(5). state: 일시 정지 | 열거 상수: BLOCKED       | 설명: 사용하고자 하는 객체의 락이 풀릴 때까지 기다리는 상태
(6). state: 종료 상태 | 열거 상수: TERMINATED    | 설명: 실행을 마친 상태
 7. join() 메소드는 호출한 스레드는 일시 정지 상태로 된다. join()메서드로 가지는 스레드가 종료되거나 매개값으로 주어진 시간이 지나야 한다. 그래야 대기상태로 바뀐다.
 8. wait(parameter) parameter: 숫자 숫자가 주어지면 주어진 시간이 지남녀 자동으로 실행 대기 상태가 된다.
 	그런데 wait(long millis)를 호출하면 즉 숫자가 안 주어졌으므로 우리는 반드시 notify() 혹은 notifyAll()를 써야 실행 대기 상태가 된다.
 	

